{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\car\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport List from \"../components/List\";\nimport ListItem from \"../components/ListItem\";\nimport Select from \"../components/Select\";\nimport Router from \"next/router\";\nlet words = [{\n  name: \"Jastrzębie zdrój\",\n  id: 48\n}, {\n  name: \"Rybnik\",\n  id: 44\n}];\nlet wordsNames = words.map(word => {\n  return word.name;\n});\n\nconst index = ({\n  resData,\n  wordID\n}) => {\n  const wordName = words.filter(word => {\n    return word.id == wordID;\n  });\n  const {\n    name\n  } = wordName[0];\n  const {\n    0: data,\n    1: setData\n  } = useState(resData);\n  useEffect(() => {\n    setData(resData);\n  }, [resData]);\n  let arrayOfItems = Object.values(data);\n  let dates = Object.keys(data);\n  let lists = arrayOfItems.map((i, index) => {\n    const items = i.map((e, eindex) => {\n      if (e.practice) {\n        return __jsx(ListItem, {\n          key: eindex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }\n        }, \" \", __jsx(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }\n        }, \"Praktyka\"), \" : \", e.practice[0].date);\n      }\n\n      if (e.theory) return __jsx(ListItem, {\n        key: eindex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 34\n        }\n      }, \" Teoria: \", e.theory.date);\n    });\n    return __jsx(List, {\n      key: index,\n      day: dates[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, items);\n  });\n\n  const handleChange = event => {\n    event.persist();\n    Router.push({\n      pathname: \"/\",\n      query: {\n        id: event.target.value\n      }\n    });\n  };\n\n  for (let i = 6; i < 12; i++) {}\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, name, __jsx(Select, {\n    onChange: handleChange,\n    value: wordID,\n    type: \"word\",\n    title: \"Wyb\\xF3r worda\",\n    options: wordsNames,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), lists);\n};\n\nexport async function getServerSideProps(ctx) {\n  ctx.query.id ? ctx.query.id : ctx.query.id = 48;\n  let resData = {};\n\n  for (let i = 6; i < 12; i++) {\n    const url = `https://info-car.pl/services/word/ajax/getSchedule?wordId=${ctx.query.id}&examCategory=B&month=2020-0${i}&_=1591863562242`;\n    const res = await fetch(url);\n    const json = await res.json();\n    resData = _objectSpread(_objectSpread({}, resData), json.terms);\n  }\n\n  return {\n    props: {\n      resData,\n      wordID: ctx.query.id\n    }\n  };\n}\nexport default index;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/car/pages/index.js"],"names":["React","useState","useEffect","List","ListItem","Select","Router","words","name","id","wordsNames","map","word","index","resData","wordID","wordName","filter","data","setData","arrayOfItems","Object","values","dates","keys","lists","i","items","e","eindex","practice","date","theory","handleChange","event","persist","push","pathname","query","target","value","getServerSideProps","ctx","url","res","fetch","json","terms","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport List from \"../components/List\";\r\nimport ListItem from \"../components/ListItem\";\r\nimport Select from \"../components/Select\";\r\nimport Router from \"next/router\";\r\n\r\nlet words = [\r\n    { name: \"Jastrzębie zdrój\", id: 48 },\r\n    { name: \"Rybnik\", id: 44 },\r\n];\r\nlet wordsNames = words.map((word) => {\r\n    return word.name;\r\n});\r\nconst index = ({ resData, wordID }) => {\r\n    const wordName = words.filter((word) => {\r\n        return word.id == wordID;\r\n    });\r\n    const { name } = wordName[0];\r\n\r\n    const [data, setData] = useState(resData);\r\n\r\n    useEffect(() => {\r\n        setData(resData);\r\n    }, [resData]);\r\n\r\n    let arrayOfItems = Object.values(data);\r\n    let dates = Object.keys(data);\r\n\r\n    let lists = arrayOfItems.map((i, index) => {\r\n        const items = i.map((e, eindex) => {\r\n            if (e.practice) {\r\n                return (\r\n                    <ListItem key={eindex}>\r\n                        {\" \"}\r\n                        <b>Praktyka</b> : {e.practice[0].date}\r\n                    </ListItem>\r\n                );\r\n            }\r\n            if (e.theory) return <ListItem key={eindex}> Teoria: {e.theory.date}</ListItem>;\r\n        });\r\n\r\n        return (\r\n            <List key={index} day={dates[index]}>\r\n                {items}\r\n            </List>\r\n        );\r\n    });\r\n    const handleChange = (event) => {\r\n        event.persist();\r\n        Router.push({\r\n            pathname: \"/\",\r\n            query: { id: event.target.value },\r\n        });\r\n    };\r\n    for (let i = 6; i < 12; i++) {}\r\n    return (\r\n        <div>\r\n            {name}\r\n            <Select\r\n                onChange={handleChange}\r\n                value={wordID}\r\n                type=\"word\"\r\n                title=\"Wybór worda\"\r\n                options={wordsNames}\r\n            />\r\n            {lists}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport async function getServerSideProps(ctx) {\r\n    ctx.query.id ? ctx.query.id : (ctx.query.id = 48);\r\n\r\n    let resData = {};\r\n    for (let i = 6; i < 12; i++) {\r\n        const url = `https://info-car.pl/services/word/ajax/getSchedule?wordId=${ctx.query.id}&examCategory=B&month=2020-0${i}&_=1591863562242`;\r\n        const res = await fetch(url);\r\n        const json = await res.json();\r\n        resData = { ...resData, ...json.terms };\r\n    }\r\n\r\n    return { props: { resData, wordID: ctx.query.id } };\r\n}\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}