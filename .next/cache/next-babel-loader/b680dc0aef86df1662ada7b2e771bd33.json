{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import React from \"react\";\n// import List from \"../components/List\";\n// import ListItem from \"../components/ListItem\";\n// const index = ({ respond }) => {\n//     let arrayOfItems = Object.values(respond.terms);\n//     let dates = Object.keys(respond.terms);\n//     console.log(dates);\n//     let lists = arrayOfItems.map((i, index) => {\n//         const items = i.map((e) => {\n//             if (e.practice) return <ListItem>Praktyka : {e.practice[0].date}</ListItem>;\n//             if (e.theory) return <ListItem> teoria: {e.theory.date}</ListItem>;\n//         });\n//         return <List day={dates[index]}>{items}</List>;\n//     });\n//     return <div>{lists}</div>;\n// };\nindex.getInitialProps = async ctx => {\n  let terms = {};\n\n  for (let i = 6; i < 9; i++) {\n    const res = await fetch(`https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0${i}&_=1591863562242`);\n    const json = await res.json();\n    terms = _objectSpread(_objectSpread({}, terms), {}, {\n      json\n    });\n  }\n\n  console.log(terms);\n  return {\n    respond: terms\n  };\n};\n\nexport default index;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/car/pages/index.js"],"names":["index","getInitialProps","ctx","terms","i","res","fetch","json","console","log","respond"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAA,KAAK,CAACC,eAAN,GAAwB,MAAOC,GAAP,IAAe;AACnC,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAClB,2FAA0FF,CAAE,kBAD1E,CAAvB;AAGA,UAAMG,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACAJ,IAAAA,KAAK,mCAAQA,KAAR;AAAeI,MAAAA;AAAf,MAAL;AACH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,SAAO;AAAEO,IAAAA,OAAO,EAAEP;AAAX,GAAP;AACH,CAXD;;AAYA,eAAeH,KAAf","sourcesContent":["// import React from \"react\";\r\n// import List from \"../components/List\";\r\n// import ListItem from \"../components/ListItem\";\r\n// const index = ({ respond }) => {\r\n//     let arrayOfItems = Object.values(respond.terms);\r\n//     let dates = Object.keys(respond.terms);\r\n//     console.log(dates);\r\n\r\n//     let lists = arrayOfItems.map((i, index) => {\r\n//         const items = i.map((e) => {\r\n//             if (e.practice) return <ListItem>Praktyka : {e.practice[0].date}</ListItem>;\r\n//             if (e.theory) return <ListItem> teoria: {e.theory.date}</ListItem>;\r\n//         });\r\n\r\n//         return <List day={dates[index]}>{items}</List>;\r\n//     });\r\n//     return <div>{lists}</div>;\r\n// };\r\n\r\nindex.getInitialProps = async (ctx) => {\r\n    let terms = {};\r\n    for (let i = 6; i < 9; i++) {\r\n        const res = await fetch(\r\n            `https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0${i}&_=1591863562242`\r\n        );\r\n        const json = await res.json();\r\n        terms = { ...terms, json };\r\n    }\r\n    console.log(terms);\r\n    return { respond: terms };\r\n};\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}