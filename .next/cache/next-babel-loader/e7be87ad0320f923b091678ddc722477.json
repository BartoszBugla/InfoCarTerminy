{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\car\\\\pages\\\\index.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport List from \"../components/List\";\nimport ListItem from \"../components/ListItem\";\n\nvar index = function index(_ref) {\n  var respond = _ref.respond;\n  var arrayOfItems = Object.values(respond);\n  var dates = Object.keys(respond);\n  var status = \"Brak praktyki\";\n  var lists = arrayOfItems.map(function (i, index) {\n    var items = i.map(function (e, eindex) {\n      if (e.practice) {\n        status = \"Jest egzamin praktyczny!\";\n        return __jsx(ListItem, {\n          key: eindex,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 24\n          }\n        }, \"Praktyka : \", e.practice[0].date);\n      }\n\n      if (e.theory) return __jsx(ListItem, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 34\n        }\n      }, \" Teoria: \", e.theory.date);\n    });\n    return __jsx(List, {\n      day: dates[index],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    }, items);\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, lists, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, status));\n};\n\nindex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var words, respond, i, res, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            words = [{\n              name: \"jastrzębie zdrój\",\n              id: 48\n            }];\n            respond = {};\n            i = 6;\n\n          case 3:\n            if (!(i < 12)) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 6;\n            return fetch(\"https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0\".concat(i, \"&_=1591863562242\"));\n\n          case 6:\n            res = _context.sent;\n            _context.next = 9;\n            return res.json();\n\n          case 9:\n            json = _context.sent;\n            respond = _objectSpread(_objectSpread({}, respond), json.terms);\n\n          case 11:\n            i++;\n            _context.next = 3;\n            break;\n\n          case 14:\n            return _context.abrupt(\"return\", {\n              respond: respond\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default index;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/car/pages/index.js"],"names":["React","List","ListItem","index","respond","arrayOfItems","Object","values","dates","keys","status","lists","map","i","items","e","eindex","practice","date","theory","getInitialProps","ctx","words","name","id","fetch","res","json","terms"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC3B,MAAIC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcH,OAAd,CAAnB;AACA,MAAII,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAYL,OAAZ,CAAZ;AACA,MAAIM,MAAM,GAAG,eAAb;AACA,MAAIC,KAAK,GAAGN,YAAY,CAACO,GAAb,CAAiB,UAACC,CAAD,EAAIV,KAAJ,EAAc;AACvC,QAAMW,KAAK,GAAGD,CAAC,CAACD,GAAF,CAAM,UAACG,CAAD,EAAIC,MAAJ,EAAe;AAC/B,UAAID,CAAC,CAACE,QAAN,EAAgB;AACZP,QAAAA,MAAM,GAAG,0BAAT;AACA,eAAO,MAAC,QAAD;AAAU,UAAA,GAAG,EAAEM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmCD,CAAC,CAACE,QAAF,CAAW,CAAX,EAAcC,IAAjD,CAAP;AACH;;AACD,UAAIH,CAAC,CAACI,MAAN,EAAc,OAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoBJ,CAAC,CAACI,MAAF,CAASD,IAA7B,CAAP;AACjB,KANa,CAAd;AAQA,WAAO,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEV,KAAK,CAACL,KAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BW,KAA1B,CAAP;AACH,GAVW,CAAZ;AAWA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KADL,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,MAAJ,CAFJ,CADJ;AAMH,CArBD;;AAuBAP,KAAK,CAACiB,eAAN;AAAA,uEAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,YAAAA,KADgB,GACR,CAAC;AAAEC,cAAAA,IAAI,EAAE,kBAAR;AAA4BC,cAAAA,EAAE,EAAE;AAAhC,aAAD,CADQ;AAEhBpB,YAAAA,OAFgB,GAEN,EAFM;AAGXS,YAAAA,CAHW,GAGP,CAHO;;AAAA;AAAA,kBAGJA,CAAC,GAAG,EAHA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIEY,KAAK,mGACwEZ,CADxE,sBAJP;;AAAA;AAIVa,YAAAA,GAJU;AAAA;AAAA,mBAOGA,GAAG,CAACC,IAAJ,EAPH;;AAAA;AAOVA,YAAAA,IAPU;AAQhBvB,YAAAA,OAAO,mCAAQA,OAAR,GAAoBuB,IAAI,CAACC,KAAzB,CAAP;;AARgB;AAGIf,YAAAA,CAAC,EAHL;AAAA;AAAA;;AAAA;AAAA,6CAWb;AAAET,cAAAA,OAAO,EAAPA;AAAF,aAXa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAaA,eAAeD,KAAf","sourcesContent":["import React from \"react\";\r\nimport List from \"../components/List\";\r\nimport ListItem from \"../components/ListItem\";\r\n\r\nconst index = ({ respond }) => {\r\n    let arrayOfItems = Object.values(respond);\r\n    let dates = Object.keys(respond);\r\n    let status = \"Brak praktyki\";\r\n    let lists = arrayOfItems.map((i, index) => {\r\n        const items = i.map((e, eindex) => {\r\n            if (e.practice) {\r\n                status = \"Jest egzamin praktyczny!\";\r\n                return <ListItem key={eindex}>Praktyka : {e.practice[0].date}</ListItem>;\r\n            }\r\n            if (e.theory) return <ListItem> Teoria: {e.theory.date}</ListItem>;\r\n        });\r\n\r\n        return <List day={dates[index]}>{items}</List>;\r\n    });\r\n    return (\r\n        <div>\r\n            {lists}\r\n            <p>{status}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nindex.getInitialProps = async (ctx) => {\r\n    let words = [{ name: \"jastrzębie zdrój\", id: 48 }];\r\n    let respond = {};\r\n    for (let i = 6; i < 12; i++) {\r\n        const res = await fetch(\r\n            `https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0${i}&_=1591863562242`\r\n        );\r\n        const json = await res.json();\r\n        respond = { ...respond, ...json.terms };\r\n    }\r\n\r\n    return { respond };\r\n};\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}