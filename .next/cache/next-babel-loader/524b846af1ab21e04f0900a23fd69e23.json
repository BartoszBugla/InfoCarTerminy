{"ast":null,"code":"import nextConnect from \"next-connect\";\nimport middleware from \"../../middleware/database\";\nconst User = req.db.collection(\"users\");\nconst handler = nextConnect();\nhandler.use(middleware);\nhandler.get(async (req, res) => {\n  let doc = User.findOne();\n  console.log(doc);\n  res.json(doc);\n});\nhandler.post(async (req, res) => {\n  let data = req.body;\n  data = JSON.parse(data);\n  data.date = new Date(data.date);\n  let doc = await req.db.collection(\"daily\").updateOne({\n    date: new Date(data.date)\n  }, {\n    $set: data\n  }, {\n    upsert: true\n  });\n  res.json({\n    message: \"ok\"\n  });\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/nextTutorial/pages/api/users.js"],"names":["nextConnect","middleware","User","req","db","collection","handler","use","get","res","doc","findOne","console","log","json","post","data","body","JSON","parse","date","Date","updateOne","$set","upsert","message"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,MAAMC,IAAI,GAAGC,GAAG,CAACC,EAAJ,CAAOC,UAAP,CAAkB,OAAlB,CAAb;AACA,MAAMC,OAAO,GAAGN,WAAW,EAA3B;AAEAM,OAAO,CAACC,GAAR,CAAYN,UAAZ;AAEAK,OAAO,CAACE,GAAR,CAAY,OAAOL,GAAP,EAAYM,GAAZ,KAAoB;AAC5B,MAAIC,GAAG,GAAGR,IAAI,CAACS,OAAL,EAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAD,EAAAA,GAAG,CAACK,IAAJ,CAASJ,GAAT;AACH,CAJD;AAKAJ,OAAO,CAACS,IAAR,CAAa,OAAOZ,GAAP,EAAYM,GAAZ,KAAoB;AAC7B,MAAIO,IAAI,GAAGb,GAAG,CAACc,IAAf;AACAD,EAAAA,IAAI,GAAGE,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP;AACAA,EAAAA,IAAI,CAACI,IAAL,GAAY,IAAIC,IAAJ,CAASL,IAAI,CAACI,IAAd,CAAZ;AACA,MAAIV,GAAG,GAAG,MAAMP,GAAG,CAACC,EAAJ,CACXC,UADW,CACA,OADA,EAEXiB,SAFW,CAED;AAAEF,IAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASL,IAAI,CAACI,IAAd;AAAR,GAFC,EAE8B;AAAEG,IAAAA,IAAI,EAAEP;AAAR,GAF9B,EAE8C;AAAEQ,IAAAA,MAAM,EAAE;AAAV,GAF9C,CAAhB;AAIAf,EAAAA,GAAG,CAACK,IAAJ,CAAS;AAAEW,IAAAA,OAAO,EAAE;AAAX,GAAT;AACH,CATD;AAWA,eAAenB,OAAf","sourcesContent":["import nextConnect from \"next-connect\";\r\nimport middleware from \"../../middleware/database\";\r\nconst User = req.db.collection(\"users\");\r\nconst handler = nextConnect();\r\n\r\nhandler.use(middleware);\r\n\r\nhandler.get(async (req, res) => {\r\n    let doc = User.findOne();\r\n    console.log(doc);\r\n    res.json(doc);\r\n});\r\nhandler.post(async (req, res) => {\r\n    let data = req.body;\r\n    data = JSON.parse(data);\r\n    data.date = new Date(data.date);\r\n    let doc = await req.db\r\n        .collection(\"daily\")\r\n        .updateOne({ date: new Date(data.date) }, { $set: data }, { upsert: true });\r\n\r\n    res.json({ message: \"ok\" });\r\n});\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}