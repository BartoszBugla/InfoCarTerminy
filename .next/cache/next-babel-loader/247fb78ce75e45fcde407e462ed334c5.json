{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\car\\\\pages\\\\index.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport List from \"../components/List\";\nimport ListItem from \"../components/ListItem\";\nimport Select from \"../components/Select\";\nimport Router from \"next/router\";\nvar words = [{\n  name: \"jastrzębie zdrój\",\n  id: 48\n}];\n\nvar index = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _useState, data, setData, i, res, json, arrayOfItems, dates, lists, handleChange, _i;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            _useState = useState(resData), data = _useState[0], setData = _useState[1];\n            i = 6;\n\n          case 3:\n            if (!(i < 12)) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 6;\n            return fetch(\"https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0\".concat(i, \"&_=1591863562242\"));\n\n          case 6:\n            res = _context.sent;\n            _context.next = 9;\n            return res.json();\n\n          case 9:\n            json = _context.sent;\n            setData(_objectSpread(_objectSpread({}, data), json.terms));\n\n          case 11:\n            i++;\n            _context.next = 3;\n            break;\n\n          case 14:\n            arrayOfItems = Object.values(data);\n            dates = Object.keys(data);\n            lists = arrayOfItems.map(function (i, index) {\n              var items = i.map(function (e, eindex) {\n                if (e.practice) {\n                  return __jsx(ListItem, {\n                    key: eindex,\n                    __self: _this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 24,\n                      columnNumber: 21\n                    }\n                  }, \" \", __jsx(\"b\", {\n                    __self: _this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 26,\n                      columnNumber: 25\n                    }\n                  }, \"Praktyka\"), \" : \", e.practice[0].date);\n                }\n\n                if (e.theory) return __jsx(ListItem, {\n                  key: eindex,\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 30,\n                    columnNumber: 34\n                  }\n                }, \" Teoria: \", e.theory.date);\n              });\n              return __jsx(List, {\n                key: index,\n                day: dates[index],\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 13\n                }\n              }, items);\n            });\n\n            handleChange = function handleChange(event) {\n              Router.push({\n                pathname: \"/\",\n                query: {\n                  id: event.target.value\n                }\n              });\n            };\n\n            for (_i = 6; _i < 12; _i++) {}\n\n            return _context.abrupt(\"return\", __jsx(\"div\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 9\n              }\n            }, \"Jastrzebie zdr\\xF3j\", __jsx(Select, {\n              onChange: handleChange,\n              value: wordID,\n              type: \"number\",\n              title: \"wyb\\xF3r worda\",\n              lastNumber: \"50\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 13\n              }\n            }), lists));\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"qDbi8jAGavTL4LnicTXk+6krBLQ=\"));\n\n  return function index() {\n    return _ref.apply(this, arguments);\n  };\n}(); // index.getInitialProps = async (ctx) => {\n//     let resData = {};\n//     let loopData = {};\n//     for (let i = 6; i < 12; i++) {\n//         const res = await fetch(\n//             `https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0${i}&_=1591863562242`\n//         );\n//         const json = await res.json();\n//         loopData = { ...loopData, ...json.terms };\n//     }\n//     return { resData, wordID: ctx.query.id };\n// };\n\n\nexport default index;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/car/pages/index.js"],"names":["React","useState","List","ListItem","Select","Router","words","name","id","index","resData","data","setData","i","fetch","res","json","terms","arrayOfItems","Object","values","dates","keys","lists","map","items","e","eindex","practice","date","theory","handleChange","event","push","pathname","query","target","value","wordID"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport List from \"../components/List\";\r\nimport ListItem from \"../components/ListItem\";\r\nimport Select from \"../components/Select\";\r\nimport Router from \"next/router\";\r\n\r\nlet words = [{ name: \"jastrzębie zdrój\", id: 48 }];\r\nconst index = async () => {\r\n    const [data, setData] = useState(resData);\r\n    for (let i = 6; i < 12; i++) {\r\n        const res = await fetch(\r\n            `https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0${i}&_=1591863562242`\r\n        );\r\n        const json = await res.json();\r\n        setData({ ...data, ...json.terms });\r\n    }\r\n    let arrayOfItems = Object.values(data);\r\n    let dates = Object.keys(data);\r\n\r\n    let lists = arrayOfItems.map((i, index) => {\r\n        const items = i.map((e, eindex) => {\r\n            if (e.practice) {\r\n                return (\r\n                    <ListItem key={eindex}>\r\n                        {\" \"}\r\n                        <b>Praktyka</b> : {e.practice[0].date}\r\n                    </ListItem>\r\n                );\r\n            }\r\n            if (e.theory) return <ListItem key={eindex}> Teoria: {e.theory.date}</ListItem>;\r\n        });\r\n\r\n        return (\r\n            <List key={index} day={dates[index]}>\r\n                {items}\r\n            </List>\r\n        );\r\n    });\r\n    const handleChange = (event) => {\r\n        Router.push({\r\n            pathname: \"/\",\r\n            query: { id: event.target.value },\r\n        });\r\n    };\r\n    for (let i = 6; i < 12; i++) {}\r\n    return (\r\n        <div>\r\n            Jastrzebie zdrój\r\n            <Select\r\n                onChange={handleChange}\r\n                value={wordID}\r\n                type=\"number\"\r\n                title=\"wybór worda\"\r\n                lastNumber=\"50\"\r\n            />\r\n            {lists}\r\n        </div>\r\n    );\r\n};\r\n\r\n// index.getInitialProps = async (ctx) => {\r\n//     let resData = {};\r\n\r\n//     let loopData = {};\r\n//     for (let i = 6; i < 12; i++) {\r\n//         const res = await fetch(\r\n//             `https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0${i}&_=1591863562242`\r\n//         );\r\n//         const json = await res.json();\r\n//         loopData = { ...loopData, ...json.terms };\r\n//     }\r\n\r\n//     return { resData, wordID: ctx.query.id };\r\n// };\r\n\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}