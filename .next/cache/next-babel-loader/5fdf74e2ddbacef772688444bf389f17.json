{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _readOnlyError from \"@babel/runtime/helpers/esm/readOnlyError\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\car\\\\pages\\\\index.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport List from \"../components/List\";\nimport ListItem from \"../components/ListItem\";\n\nvar index = function index(_ref) {\n  var respond = _ref.respond;\n  var arrayOfItems = Object.values(respond.terms);\n  var dates = Object.keys(respond.terms);\n  console.log(dates);\n  var lists = arrayOfItems.map(function (i, index) {\n    var items = i.map(function (e) {\n      if (e.practice) return __jsx(ListItem, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 36\n        }\n      }, \"Praktyka : \", e.practice[0].date);\n      if (e.theory) return __jsx(ListItem, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 34\n        }\n      }, \" teoria: \", e.theory.date);\n    });\n    return __jsx(List, {\n      day: dates[index],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 16\n      }\n    }, items);\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }\n  }, lists);\n};\n\nindex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var json, i, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            json = {};\n            i = 6;\n\n          case 2:\n            if (!(i < 9)) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 5;\n            return fetch(\"https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0\".concat(i, \"&_=1591863562242\"));\n\n          case 5:\n            res = _context.sent;\n            json = _objectSpread(_objectSpread({}, json), {}, {\n              res: res\n            });\n            console.log(json);\n\n          case 8:\n            _readOnlyError(\"i\"), i++;\n            _context.next = 2;\n            break;\n\n          case 11:\n            return _context.abrupt(\"return\", {\n              respond: json\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default index;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/car/pages/index.js"],"names":["React","List","ListItem","index","respond","arrayOfItems","Object","values","terms","dates","keys","console","log","lists","map","i","items","e","practice","date","theory","getInitialProps","ctx","json","fetch","res"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC3B,MAAIC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcH,OAAO,CAACI,KAAtB,CAAnB;AACA,MAAIC,KAAK,GAAGH,MAAM,CAACI,IAAP,CAAYN,OAAO,CAACI,KAApB,CAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,MAAII,KAAK,GAAGR,YAAY,CAACS,GAAb,CAAiB,UAACC,CAAD,EAAIZ,KAAJ,EAAc;AACvC,QAAMa,KAAK,GAAGD,CAAC,CAACD,GAAF,CAAM,UAACG,CAAD,EAAO;AACvB,UAAIA,CAAC,CAACC,QAAN,EAAgB,OAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsBD,CAAC,CAACC,QAAF,CAAW,CAAX,EAAcC,IAApC,CAAP;AAChB,UAAIF,CAAC,CAACG,MAAN,EAAc,OAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoBH,CAAC,CAACG,MAAF,CAASD,IAA7B,CAAP;AACjB,KAHa,CAAd;AAKA,WAAO,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEV,KAAK,CAACN,KAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0Ba,KAA1B,CAAP;AACH,GAPW,CAAZ;AAQA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,KAAN,CAAP;AACH,CAdD;;AAgBAV,KAAK,CAACkB,eAAN;AAAA,uEAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,YAAAA,IADgB,GACT,EADS;AAETR,YAAAA,CAFS,GAEL,CAFK;;AAAA;AAAA,kBAEFA,CAAC,GAAG,CAFF;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGES,KAAK,mGACwET,CADxE,sBAHP;;AAAA;AAGVU,YAAAA,GAHU;AAMhBF,YAAAA,IAAI,mCAAQA,IAAR;AAAcE,cAAAA,GAAG,EAAHA;AAAd,cAAJ;AACAd,YAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;;AAPgB;AAAA,iCAEKR,CAAC,EAFN;AAAA;AAAA;;AAAA;AAAA,6CAUb;AAAEX,cAAAA,OAAO,EAAEmB;AAAX,aAVa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAYA,eAAepB,KAAf","sourcesContent":["import React from \"react\";\r\nimport List from \"../components/List\";\r\nimport ListItem from \"../components/ListItem\";\r\nconst index = ({ respond }) => {\r\n    let arrayOfItems = Object.values(respond.terms);\r\n    let dates = Object.keys(respond.terms);\r\n    console.log(dates);\r\n\r\n    let lists = arrayOfItems.map((i, index) => {\r\n        const items = i.map((e) => {\r\n            if (e.practice) return <ListItem>Praktyka : {e.practice[0].date}</ListItem>;\r\n            if (e.theory) return <ListItem> teoria: {e.theory.date}</ListItem>;\r\n        });\r\n\r\n        return <List day={dates[index]}>{items}</List>;\r\n    });\r\n    return <div>{lists}</div>;\r\n};\r\n\r\nindex.getInitialProps = async (ctx) => {\r\n    let json = {};\r\n    for (const i = 6; i < 9; i++) {\r\n        const res = await fetch(\r\n            `https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0${i}&_=1591863562242`\r\n        );\r\n        json = { ...json, res };\r\n        console.log(json);\r\n    }\r\n\r\n    return { respond: json };\r\n};\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}