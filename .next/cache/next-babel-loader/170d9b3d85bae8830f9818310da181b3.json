{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport List from \"../components/List\";\nimport ListItem from \"../components/ListItem\";\n\nconst index = ({\n  respond\n}) => {\n  let arrayOfItems = Object.values(respond);\n  let dates = Object.keys(respond);\n  let status = \"Brak praktyki\";\n  let lists = arrayOfItems.map((i, index) => {\n    const items = i.map((e, eindex) => {\n      if (e.practice) {\n        status = \"Jest egzamin praktyczny!\";\n        return __jsx(ListItem, {\n          key: eindex\n        }, \" \", __jsx(\"b\", null, \"Praktyka\"), \" : \", e.practice[0].date);\n      }\n\n      if (e.theory) return __jsx(ListItem, null, \" Teoria: \", e.theory.date);\n    });\n    return __jsx(List, {\n      day: dates[index]\n    }, items);\n  });\n  return __jsx(\"div\", null, \"Jastrzebie zdr\\xF3j\", lists, __jsx(\"p\", null, status));\n};\n\nindex.getInitialProps = async ctx => {\n  let words = [{\n    name: \"jastrzębie zdrój\",\n    id: 48\n  }];\n  let respond = {};\n\n  for (let i = 6; i < 12; i++) {\n    const res = await fetch(`https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0${i}&_=1591863562242`);\n    const json = await res.json();\n    respond = _objectSpread(_objectSpread({}, respond), json.terms);\n  }\n\n  return {\n    respond\n  };\n};\n\nexport default index;","map":null,"metadata":{},"sourceType":"module"}