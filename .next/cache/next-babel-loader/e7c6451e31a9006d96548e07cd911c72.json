{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\car\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport List from \"../components/List\";\nimport ListItem from \"../components/ListItem\";\n\nconst index = ({\n  respond\n}) => {\n  let arrayOfItems = Object.values(respond);\n  let dates = Object.keys(respond);\n  let status = \"Brak praktyki\";\n  let lists = arrayOfItems.map((i, index) => {\n    const items = i.map((e, eindex) => {\n      if (e.practice) {\n        status = \"Jest egzamin praktyczny!\";\n        return __jsx(ListItem, {\n          key: eindex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 21\n          }\n        }, \" \", __jsx(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }\n        }, \"Praktyka\"), \" : \", e.practice[0].date);\n      }\n\n      if (e.theory) return __jsx(ListItem, {\n        key: eindex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 34\n        }\n      }, \" Teoria: \", e.theory.date);\n    });\n    return __jsx(List, {\n      key: index,\n      day: dates[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, items);\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Jastrzebie zdr\\xF3j\", lists, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, status));\n};\n\nindex.getInitialProps = async ctx => {\n  let words = [{\n    name: \"jastrzębie zdrój\",\n    id: 48\n  }];\n  let respond = {};\n\n  for (let i = 6; i < 12; i++) {\n    const res = await fetch(`https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0${i}&_=1591863562242`);\n    const json = await res.json();\n    respond = _objectSpread(_objectSpread({}, respond), json.terms);\n  }\n\n  return {\n    respond\n  };\n};\n\nexport default index;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/car/pages/index.js"],"names":["React","List","ListItem","index","respond","arrayOfItems","Object","values","dates","keys","status","lists","map","i","items","e","eindex","practice","date","theory","getInitialProps","ctx","words","name","id","res","fetch","json","terms"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC3B,MAAIC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcH,OAAd,CAAnB;AACA,MAAII,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAYL,OAAZ,CAAZ;AACA,MAAIM,MAAM,GAAG,eAAb;AACA,MAAIC,KAAK,GAAGN,YAAY,CAACO,GAAb,CAAiB,CAACC,CAAD,EAAIV,KAAJ,KAAc;AACvC,UAAMW,KAAK,GAAGD,CAAC,CAACD,GAAF,CAAM,CAACG,CAAD,EAAIC,MAAJ,KAAe;AAC/B,UAAID,CAAC,CAACE,QAAN,EAAgB;AACZP,QAAAA,MAAM,GAAG,0BAAT;AACA,eACI,MAAC,QAAD;AAAU,UAAA,GAAG,EAAEM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,GADL,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,SAEuBD,CAAC,CAACE,QAAF,CAAW,CAAX,EAAcC,IAFrC,CADJ;AAMH;;AACD,UAAIH,CAAC,CAACI,MAAN,EAAc,OAAO,MAAC,QAAD;AAAU,QAAA,GAAG,EAAEH,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiCD,CAAC,CAACI,MAAF,CAASD,IAA1C,CAAP;AACjB,KAXa,CAAd;AAaA,WACI,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEf,KAAX;AAAkB,MAAA,GAAG,EAAEK,KAAK,CAACL,KAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKW,KADL,CADJ;AAKH,GAnBW,CAAZ;AAoBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEKH,KAFL,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,MAAJ,CAHJ,CADJ;AAOH,CA/BD;;AAiCAP,KAAK,CAACiB,eAAN,GAAwB,MAAOC,GAAP,IAAe;AACnC,MAAIC,KAAK,GAAG,CAAC;AAAEC,IAAAA,IAAI,EAAE,kBAAR;AAA4BC,IAAAA,EAAE,EAAE;AAAhC,GAAD,CAAZ;AACA,MAAIpB,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,UAAMY,GAAG,GAAG,MAAMC,KAAK,CAClB,2FAA0Fb,CAAE,kBAD1E,CAAvB;AAGA,UAAMc,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACAvB,IAAAA,OAAO,mCAAQA,OAAR,GAAoBuB,IAAI,CAACC,KAAzB,CAAP;AACH;;AAED,SAAO;AAAExB,IAAAA;AAAF,GAAP;AACH,CAZD;;AAaA,eAAeD,KAAf","sourcesContent":["import React from \"react\";\r\nimport List from \"../components/List\";\r\nimport ListItem from \"../components/ListItem\";\r\n\r\nconst index = ({ respond }) => {\r\n    let arrayOfItems = Object.values(respond);\r\n    let dates = Object.keys(respond);\r\n    let status = \"Brak praktyki\";\r\n    let lists = arrayOfItems.map((i, index) => {\r\n        const items = i.map((e, eindex) => {\r\n            if (e.practice) {\r\n                status = \"Jest egzamin praktyczny!\";\r\n                return (\r\n                    <ListItem key={eindex}>\r\n                        {\" \"}\r\n                        <b>Praktyka</b> : {e.practice[0].date}\r\n                    </ListItem>\r\n                );\r\n            }\r\n            if (e.theory) return <ListItem key={eindex}> Teoria: {e.theory.date}</ListItem>;\r\n        });\r\n\r\n        return (\r\n            <List key={index} day={dates[index]}>\r\n                {items}\r\n            </List>\r\n        );\r\n    });\r\n    return (\r\n        <div>\r\n            Jastrzebie zdrój\r\n            {lists}\r\n            <p>{status}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nindex.getInitialProps = async (ctx) => {\r\n    let words = [{ name: \"jastrzębie zdrój\", id: 48 }];\r\n    let respond = {};\r\n    for (let i = 6; i < 12; i++) {\r\n        const res = await fetch(\r\n            `https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0${i}&_=1591863562242`\r\n        );\r\n        const json = await res.json();\r\n        respond = { ...respond, ...json.terms };\r\n    }\r\n\r\n    return { respond };\r\n};\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}