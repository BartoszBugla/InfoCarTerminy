{"ast":null,"code":"const mongoose = require(\"mongoose\");\n\nimport nextConnect from \"next-connect\";\nconst uri = \"mongodb+srv://Admin:Admin@learning-zc5e1.mongodb.net/test?retryWrites=true&w=majority\";\nconst client = mongoose.connect(uri, {\n  useNewUrlParser: true,\n  useCreateIndex: true,\n  useUnifiedTopology: true,\n  useFindAndModify: false\n});\n\nasync function database(req, res, next) {\n  if (!client.isConnected()) await client.connect();\n  console.log(\"probably works\");\n  return next();\n}\n\nconst middleware = nextConnect();\nmiddleware.use(database);\nexport default middleware;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/nextTutorial/middleware/mongoose.js"],"names":["mongoose","require","nextConnect","uri","client","connect","useNewUrlParser","useCreateIndex","useUnifiedTopology","useFindAndModify","database","req","res","next","isConnected","console","log","middleware","use"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,MAAMC,GAAG,GAAG,uFAAZ;AACA,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,OAAT,CAAiBF,GAAjB,EAAsB;AACjCG,EAAAA,eAAe,EAAE,IADgB;AAEjCC,EAAAA,cAAc,EAAE,IAFiB;AAGjCC,EAAAA,kBAAkB,EAAE,IAHa;AAIjCC,EAAAA,gBAAgB,EAAE;AAJe,CAAtB,CAAf;;AAOA,eAAeC,QAAf,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,IAAlC,EAAwC;AACpC,MAAI,CAACT,MAAM,CAACU,WAAP,EAAL,EAA2B,MAAMV,MAAM,CAACC,OAAP,EAAN;AAC3BU,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,SAAOH,IAAI,EAAX;AACH;;AAED,MAAMI,UAAU,GAAGf,WAAW,EAA9B;AAEAe,UAAU,CAACC,GAAX,CAAeR,QAAf;AAEA,eAAeO,UAAf","sourcesContent":["const mongoose = require(\"mongoose\");\r\nimport nextConnect from \"next-connect\";\r\n\r\nconst uri = \"mongodb+srv://Admin:Admin@learning-zc5e1.mongodb.net/test?retryWrites=true&w=majority\";\r\nconst client = mongoose.connect(uri, {\r\n    useNewUrlParser: true,\r\n    useCreateIndex: true,\r\n    useUnifiedTopology: true,\r\n    useFindAndModify: false,\r\n});\r\n\r\nasync function database(req, res, next) {\r\n    if (!client.isConnected()) await client.connect();\r\n    console.log(\"probably works\");\r\n    return next();\r\n}\r\n\r\nconst middleware = nextConnect();\r\n\r\nmiddleware.use(database);\r\n\r\nexport default middleware;\r\n"]},"metadata":{},"sourceType":"module"}