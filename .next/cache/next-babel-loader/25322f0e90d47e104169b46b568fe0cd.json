{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\car\\\\pages\\\\[id].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport List from \"../components/List\";\nimport ListItem from \"../components/ListItem\";\nimport Select from \"../components/Select\";\nimport Router from \"next/router\";\nlet words = [{\n  name: \"jastrzębie zdrój\",\n  id: 48\n}];\n\nconst index = ({\n  resData,\n  wordID\n}) => {\n  const {\n    0: data,\n    1: setData\n  } = useState(resData);\n  let arrayOfItems = Object.values(data);\n  let dates = Object.keys(data);\n  let lists = arrayOfItems.map((i, index) => {\n    const items = i.map((e, eindex) => {\n      if (e.practice) {\n        return __jsx(ListItem, {\n          key: eindex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }\n        }, \" \", __jsx(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }\n        }, \"Praktyka\"), \" : \", e.practice[0].date);\n      }\n\n      if (e.theory) return __jsx(ListItem, {\n        key: eindex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 34\n        }\n      }, \" Teoria: \", e.theory.date);\n    });\n    return __jsx(List, {\n      key: index,\n      day: dates[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, items);\n  });\n\n  const handleChange = event => {\n    Router.push({\n      pathname: \"/\",\n      query: {\n        id: event.target.value\n      }\n    });\n  };\n\n  for (let i = 6; i < 12; i++) {}\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Jastrzebie zdr\\xF3j\", __jsx(Select, {\n    onChange: handleChange,\n    value: wordID,\n    type: \"number\",\n    title: \"wyb\\xF3r worda\",\n    lastNumber: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), lists);\n}; // index.getInitialProps = async (ctx) => {\n//     ctx.query.id ? ctx.query.id : (ctx.query.id = 48);\n//     let resData = {};\n//     for (let i = 6; i < 12; i++) {\n//         const res = await fetch(\n//             `https://info-car.pl/services/word/ajax/getSchedule?wordId=${ctx.query.id}&examCategory=B&month=2020-0${i}&_=1591863562242`\n//         );\n//         const json = await res.json();\n//         resData = { ...resData, ...json.terms };\n//     }\n//     return { resData, wordID: ctx.query.id };\n// };\n\n\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  for (let i = 0; i < 50; i++) {\n    ids.push(i);\n  } // Get the paths we want to pre-render based on posts\n\n\n  const paths = ids.map(id => ({\n    params: {\n      id\n    }\n  })); // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  params.id ? params.id : params.id = 48;\n  let resData = {};\n\n  for (let i = 6; i < 12; i++) {\n    const res = await fetch(`https://info-car.pl/services/word/ajax/getSchedule?wordId=${params.id}&examCategory=B&month=2020-0${i}&_=1591863562242`);\n    const json = await res.json();\n    resData = _objectSpread(_objectSpread({}, resData), json.terms);\n  }\n\n  return {\n    props: {\n      resData,\n      wordID: params.id\n    }\n  };\n}\nexport default index;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/car/pages/[id].js"],"names":["React","useState","List","ListItem","Select","Router","words","name","id","index","resData","wordID","data","setData","arrayOfItems","Object","values","dates","keys","lists","map","i","items","e","eindex","practice","date","theory","handleChange","event","push","pathname","query","target","value","getStaticPaths","ids","paths","params","fallback","getStaticProps","res","fetch","json","terms","props"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport List from \"../components/List\";\r\nimport ListItem from \"../components/ListItem\";\r\nimport Select from \"../components/Select\";\r\nimport Router from \"next/router\";\r\n\r\nlet words = [{ name: \"jastrzębie zdrój\", id: 48 }];\r\nconst index = ({ resData, wordID }) => {\r\n    const [data, setData] = useState(resData);\r\n\r\n    let arrayOfItems = Object.values(data);\r\n    let dates = Object.keys(data);\r\n\r\n    let lists = arrayOfItems.map((i, index) => {\r\n        const items = i.map((e, eindex) => {\r\n            if (e.practice) {\r\n                return (\r\n                    <ListItem key={eindex}>\r\n                        {\" \"}\r\n                        <b>Praktyka</b> : {e.practice[0].date}\r\n                    </ListItem>\r\n                );\r\n            }\r\n            if (e.theory) return <ListItem key={eindex}> Teoria: {e.theory.date}</ListItem>;\r\n        });\r\n\r\n        return (\r\n            <List key={index} day={dates[index]}>\r\n                {items}\r\n            </List>\r\n        );\r\n    });\r\n    const handleChange = (event) => {\r\n        Router.push({\r\n            pathname: \"/\",\r\n            query: { id: event.target.value },\r\n        });\r\n    };\r\n    for (let i = 6; i < 12; i++) {}\r\n    return (\r\n        <div>\r\n            Jastrzebie zdrój\r\n            <Select\r\n                onChange={handleChange}\r\n                value={wordID}\r\n                type=\"number\"\r\n                title=\"wybór worda\"\r\n                lastNumber=\"50\"\r\n            />\r\n            {lists}\r\n        </div>\r\n    );\r\n};\r\n\r\n// index.getInitialProps = async (ctx) => {\r\n//     ctx.query.id ? ctx.query.id : (ctx.query.id = 48);\r\n//     let resData = {};\r\n//     for (let i = 6; i < 12; i++) {\r\n//         const res = await fetch(\r\n//             `https://info-car.pl/services/word/ajax/getSchedule?wordId=${ctx.query.id}&examCategory=B&month=2020-0${i}&_=1591863562242`\r\n//         );\r\n//         const json = await res.json();\r\n//         resData = { ...resData, ...json.terms };\r\n//     }\r\n\r\n//     return { resData, wordID: ctx.query.id };\r\n// };\r\nexport async function getStaticPaths() {\r\n    // Call an external API endpoint to get posts\r\n    for (let i = 0; i < 50; i++) {\r\n        ids.push(i);\r\n    }\r\n\r\n    // Get the paths we want to pre-render based on posts\r\n    const paths = ids.map((id) => ({\r\n        params: { id },\r\n    }));\r\n\r\n    // We'll pre-render only these paths at build time.\r\n    // { fallback: false } means other routes should 404.\r\n    return { paths, fallback: false };\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n    params.id ? params.id : (params.id = 48);\r\n    let resData = {};\r\n    for (let i = 6; i < 12; i++) {\r\n        const res = await fetch(\r\n            `https://info-car.pl/services/word/ajax/getSchedule?wordId=${params.id}&examCategory=B&month=2020-0${i}&_=1591863562242`\r\n        );\r\n        const json = await res.json();\r\n        resData = { ...resData, ...json.terms };\r\n    }\r\n\r\n    return { props: { resData, wordID: params.id } };\r\n}\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}