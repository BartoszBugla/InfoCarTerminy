{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\car\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport List from \"../components/List\";\nimport ListItem from \"../components/ListItem\";\nimport Select from \"../components/Select\";\n\nvar index = function index(_ref) {\n  _s();\n\n  var respond = _ref.respond;\n\n  var _useState = useState(respond),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var arrayOfItems = Object.values(data);\n  var dates = Object.keys(data);\n\n  var _useState2 = useState(48),\n      wordID = _useState2[0],\n      setwordID = _useState2[1];\n\n  var lists = arrayOfItems.map(function (i, index) {\n    var items = i.map(function (e, eindex) {\n      if (e.practice) {\n        return __jsx(ListItem, {\n          key: eindex,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }\n        }, \" \", __jsx(\"b\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }\n        }, \"Praktyka\"), \" : \", e.practice[0].date);\n      }\n\n      if (e.theory) return __jsx(ListItem, {\n        key: eindex,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 34\n        }\n      }, \" Teoria: \", e.theory.date);\n    });\n    return __jsx(List, {\n      key: index,\n      day: dates[index],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, items);\n  });\n\n  var handleChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var i;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.persist();\n              setwordID(event.target.value);\n\n              for (i = 6; i < 12; i++) {\n                fetch(\"https://info-car.pl/services/word/ajax/getSchedule?wordId=\".concat(wordID, \"&examCategory=B&month=2020-0\").concat(i, \"&_=1591863562242\")).then(function (res) {\n                  return res.json();\n                }).then(function (json) {\n                  return setData(json);\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleChange(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Jastrzebie zdr\\xF3j\", __jsx(Select, {\n    onChange: handleChange,\n    value: wordID,\n    type: \"number\",\n    title: \"wyb\\xF3r worda\",\n    lastNumber: \"50\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), lists);\n};\n\n_s(index, \"C47Ik/zyHz/u0HmE0tKYr72UCws=\");\n\nindex.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx) {\n    var words, respond, i, res, json;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            words = [{\n              name: \"jastrzębie zdrój\",\n              id: 48\n            }];\n            respond = {};\n            i = 6;\n\n          case 3:\n            if (!(i < 12)) {\n              _context2.next = 14;\n              break;\n            }\n\n            _context2.next = 6;\n            return fetch(\"https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0\".concat(i, \"&_=1591863562242\"));\n\n          case 6:\n            res = _context2.sent;\n            _context2.next = 9;\n            return res.json();\n\n          case 9:\n            json = _context2.sent;\n            respond = _objectSpread(_objectSpread({}, respond), json.terms);\n\n          case 11:\n            i++;\n            _context2.next = 3;\n            break;\n\n          case 14:\n            return _context2.abrupt(\"return\", {\n              respond: respond\n            });\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default index;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/car/pages/index.js"],"names":["React","useState","List","ListItem","Select","index","respond","data","setData","arrayOfItems","Object","values","dates","keys","wordID","setwordID","lists","map","i","items","e","eindex","practice","date","theory","handleChange","event","persist","target","value","fetch","then","res","json","getInitialProps","ctx","words","name","id","terms"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport List from \"../components/List\";\r\nimport ListItem from \"../components/ListItem\";\r\nimport Select from \"../components/Select\";\r\nconst index = ({ respond }) => {\r\n    const [data, setData] = useState(respond);\r\n\r\n    let arrayOfItems = Object.values(data);\r\n    let dates = Object.keys(data);\r\n\r\n    const [wordID, setwordID] = useState(48);\r\n    let lists = arrayOfItems.map((i, index) => {\r\n        const items = i.map((e, eindex) => {\r\n            if (e.practice) {\r\n                return (\r\n                    <ListItem key={eindex}>\r\n                        {\" \"}\r\n                        <b>Praktyka</b> : {e.practice[0].date}\r\n                    </ListItem>\r\n                );\r\n            }\r\n            if (e.theory) return <ListItem key={eindex}> Teoria: {e.theory.date}</ListItem>;\r\n        });\r\n\r\n        return (\r\n            <List key={index} day={dates[index]}>\r\n                {items}\r\n            </List>\r\n        );\r\n    });\r\n    const handleChange = async (event) => {\r\n        event.persist();\r\n        setwordID(event.target.value);\r\n\r\n        for (let i = 6; i < 12; i++) {\r\n            fetch(\r\n                `https://info-car.pl/services/word/ajax/getSchedule?wordId=${wordID}&examCategory=B&month=2020-0${i}&_=1591863562242`\r\n            )\r\n                .then((res) => res.json())\r\n                .then((json) => setData(json));\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            Jastrzebie zdrój\r\n            <Select\r\n                onChange={handleChange}\r\n                value={wordID}\r\n                type=\"number\"\r\n                title=\"wybór worda\"\r\n                lastNumber=\"50\"\r\n            />\r\n            {lists}\r\n        </div>\r\n    );\r\n};\r\n\r\nindex.getInitialProps = async (ctx) => {\r\n    let words = [{ name: \"jastrzębie zdrój\", id: 48 }];\r\n    let respond = {};\r\n    for (let i = 6; i < 12; i++) {\r\n        const res = await fetch(\r\n            `https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0${i}&_=1591863562242`\r\n        );\r\n        const json = await res.json();\r\n        respond = { ...respond, ...json.terms };\r\n    }\r\n\r\n    return { respond };\r\n};\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}