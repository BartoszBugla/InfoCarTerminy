{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import React from \"react\";\n// import List from \"../components/List\";\n// import ListItem from \"../components/ListItem\";\n// const index = ({ respond }) => {\n//     let arrayOfItems = Object.values(respond.terms);\n//     let dates = Object.keys(respond.terms);\n//     console.log(dates);\n//     let lists = arrayOfItems.map((i, index) => {\n//         const items = i.map((e) => {\n//             if (e.practice) return <ListItem>Praktyka : {e.practice[0].date}</ListItem>;\n//             if (e.theory) return <ListItem> teoria: {e.theory.date}</ListItem>;\n//         });\n//         return <List day={dates[index]}>{items}</List>;\n//     });\n//     return <div>{lists}</div>;\n// };\nindex.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var terms, i, res, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            terms = {};\n            i = 6;\n\n          case 2:\n            if (!(i < 9)) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 5;\n            return fetch(\"https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0\".concat(i, \"&_=1591863562242\"));\n\n          case 5:\n            res = _context.sent;\n            _context.next = 8;\n            return res.json();\n\n          case 8:\n            json = _context.sent;\n            terms = _objectSpread(_objectSpread({}, terms), {}, {\n              json: json\n            });\n\n          case 10:\n            i++;\n            _context.next = 2;\n            break;\n\n          case 13:\n            console.log(terms);\n            return _context.abrupt(\"return\", {\n              respond: terms\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default index;","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/car/pages/index.js"],"names":["index","getInitialProps","ctx","terms","i","fetch","res","json","console","log","respond"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAA,KAAK,CAACC,eAAN;AAAA,sEAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,YAAAA,KADgB,GACR,EADQ;AAEXC,YAAAA,CAFW,GAEP,CAFO;;AAAA;AAAA,kBAEJA,CAAC,GAAG,CAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGEC,KAAK,mGACwED,CADxE,sBAHP;;AAAA;AAGVE,YAAAA,GAHU;AAAA;AAAA,mBAMGA,GAAG,CAACC,IAAJ,EANH;;AAAA;AAMVA,YAAAA,IANU;AAOhBJ,YAAAA,KAAK,mCAAQA,KAAR;AAAeI,cAAAA,IAAI,EAAJA;AAAf,cAAL;;AAPgB;AAEGH,YAAAA,CAAC,EAFJ;AAAA;AAAA;;AAAA;AASpBI,YAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAToB,6CAUb;AAAEO,cAAAA,OAAO,EAAEP;AAAX,aAVa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAYA,eAAeH,KAAf","sourcesContent":["// import React from \"react\";\r\n// import List from \"../components/List\";\r\n// import ListItem from \"../components/ListItem\";\r\n// const index = ({ respond }) => {\r\n//     let arrayOfItems = Object.values(respond.terms);\r\n//     let dates = Object.keys(respond.terms);\r\n//     console.log(dates);\r\n\r\n//     let lists = arrayOfItems.map((i, index) => {\r\n//         const items = i.map((e) => {\r\n//             if (e.practice) return <ListItem>Praktyka : {e.practice[0].date}</ListItem>;\r\n//             if (e.theory) return <ListItem> teoria: {e.theory.date}</ListItem>;\r\n//         });\r\n\r\n//         return <List day={dates[index]}>{items}</List>;\r\n//     });\r\n//     return <div>{lists}</div>;\r\n// };\r\n\r\nindex.getInitialProps = async (ctx) => {\r\n    let terms = {};\r\n    for (let i = 6; i < 9; i++) {\r\n        const res = await fetch(\r\n            `https://info-car.pl/services/word/ajax/getSchedule?wordId=48&examCategory=B&month=2020-0${i}&_=1591863562242`\r\n        );\r\n        const json = await res.json();\r\n        terms = { ...terms, json };\r\n    }\r\n    console.log(terms);\r\n    return { respond: terms };\r\n};\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}