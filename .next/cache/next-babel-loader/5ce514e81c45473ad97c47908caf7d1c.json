{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Bartosz\\\\Desktop\\\\car\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display: grid;\\n    grid-template-columns: repeat(3, 1fr);\\n    @media only screen and (max-width: 600px) {\\n        grid-template-columns: repeat(1, 1fr);\\n    }\\n    @media only screen and (min-width: 900px) {\\n        grid-template-columns: repeat(2, 1fr);\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport List from \"../components/List\";\nimport ListItem from \"../components/ListItem\";\nimport Select from \"../components/Select\";\nimport Router from \"next/router\";\nimport styled from \"styled-components\";\nvar Container = styled.div(_templateObject());\n_c = Container;\nvar words = [{\n  name: \"Jastrzębie zdrój\",\n  id: 48\n}, {\n  name: \"Rybnik\",\n  id: 44\n}];\n\nvar index = function index(_ref) {\n  _s();\n\n  var resData = _ref.resData,\n      wordID = _ref.wordID;\n  var word = words.find(function (word) {\n    return word.id == wordID;\n  });\n\n  var _useState = useState(resData),\n      data = _useState[0],\n      setData = _useState[1];\n\n  useEffect(function () {\n    setData(resData);\n  }, [resData]);\n  var arrayOfItems = Object.values(data);\n  var dates = Object.keys(data);\n  var lists = arrayOfItems.map(function (i, index) {\n    var items = i.map(function (e, eindex) {\n      if (e.practice) {\n        return __jsx(ListItem, {\n          places: e.practice[0].places,\n          type: \"praktyka\",\n          date: e.practice[0].date,\n          key: eindex,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }\n        });\n      }\n\n      if (e.theory) return __jsx(ListItem, {\n        places: e.theory.places,\n        type: \"Teoria\",\n        date: e.theory.date,\n        key: eindex,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      });\n    });\n    return __jsx(List, {\n      key: index,\n      day: dates[index],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, items);\n  });\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    Router.push({\n      pathname: \"/\",\n      query: {\n        id: event.target.value\n      }\n    });\n  };\n\n  for (var i = 6; i < 12; i++) {}\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, word.name, __jsx(Select, {\n    onChange: handleChange,\n    value: wordID,\n    type: \"word\",\n    title: \"Wyb\\xF3r worda\",\n    options: words,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \" \", lists));\n};\n\n_s(index, \"/9d1ulKdt+/z8a6abzRUs7MKTUE=\");\n\nexport var __N_SSP = true;\nexport default index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["C:/Users/Bartosz/Desktop/car/pages/index.js"],"names":["React","useState","useEffect","List","ListItem","Select","Router","styled","Container","div","words","name","id","index","resData","wordID","word","find","data","setData","arrayOfItems","Object","values","dates","keys","lists","map","i","items","e","eindex","practice","places","date","theory","handleChange","event","persist","push","pathname","query","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport List from \"../components/List\";\r\nimport ListItem from \"../components/ListItem\";\r\nimport Select from \"../components/Select\";\r\nimport Router from \"next/router\";\r\nimport styled from \"styled-components\";\r\nconst Container = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    @media only screen and (max-width: 600px) {\r\n        grid-template-columns: repeat(1, 1fr);\r\n    }\r\n    @media only screen and (min-width: 900px) {\r\n        grid-template-columns: repeat(2, 1fr);\r\n    }\r\n`;\r\nlet words = [\r\n    { name: \"Jastrzębie zdrój\", id: 48 },\r\n    { name: \"Rybnik\", id: 44 },\r\n];\r\n\r\nconst index = ({ resData, wordID }) => {\r\n    const word = words.find((word) => {\r\n        return word.id == wordID;\r\n    });\r\n\r\n    const [data, setData] = useState(resData);\r\n\r\n    useEffect(() => {\r\n        setData(resData);\r\n    }, [resData]);\r\n\r\n    let arrayOfItems = Object.values(data);\r\n    let dates = Object.keys(data);\r\n\r\n    let lists = arrayOfItems.map((i, index) => {\r\n        const items = i.map((e, eindex) => {\r\n            if (e.practice) {\r\n                return (\r\n                    <ListItem\r\n                        places={e.practice[0].places}\r\n                        type=\"praktyka\"\r\n                        date={e.practice[0].date}\r\n                        key={eindex}\r\n                    />\r\n                );\r\n            }\r\n            if (e.theory)\r\n                return (\r\n                    <ListItem\r\n                        places={e.theory.places}\r\n                        type=\"Teoria\"\r\n                        date={e.theory.date}\r\n                        key={eindex}\r\n                    />\r\n                );\r\n        });\r\n\r\n        return (\r\n            <List key={index} day={dates[index]}>\r\n                {items}\r\n            </List>\r\n        );\r\n    });\r\n    const handleChange = (event) => {\r\n        event.persist();\r\n        Router.push({\r\n            pathname: \"/\",\r\n            query: { id: event.target.value },\r\n        });\r\n    };\r\n    for (let i = 6; i < 12; i++) {}\r\n    return (\r\n        <div>\r\n            {word.name}\r\n            <Select\r\n                onChange={handleChange}\r\n                value={wordID}\r\n                type=\"word\"\r\n                title=\"Wybór worda\"\r\n                options={words}\r\n            />\r\n            <Container> {lists}</Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport async function getServerSideProps(ctx) {\r\n    ctx.query.id ? ctx.query.id : (ctx.query.id = 48);\r\n\r\n    let resData = {};\r\n    for (let i = 6; i < 12; i++) {\r\n        const url = `https://info-car.pl/services/word/ajax/getSchedule?wordId=${ctx.query.id}&examCategory=B&month=2020-0${i}&_=1591863562242`;\r\n        const res = await fetch(url);\r\n        const json = await res.json();\r\n        resData = { ...resData, ...json.terms };\r\n    }\r\n\r\n    return { props: { resData, wordID: ctx.query.id } };\r\n}\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}